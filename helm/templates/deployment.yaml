apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-broker
  labels:
    app.kubernetes.io/component: broker
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.broker.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: broker
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: broker
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: broker
          imagePullPolicy: Always
          image: "{{ .Values.broker.image.repository }}:{{ .Values.broker.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "broker"
            - name: SERVICE_GROUP
              value: "carrier"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: REDIS_HOST
              value: "carrier-redis-master"
            - name: REDIS_PORT
              value: "6379"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.broker.resources.limits.cpu }}
              memory: {{ .Values.broker.resources.limits.memory }}
            requests:
              cpu: {{ .Values.broker.resources.requests.cpu }}
              memory: {{ .Values.broker.resources.requests.memory }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-wms
  labels:
    app.kubernetes.io/component: wms
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.wms.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: wms
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: wms
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: wms
          imagePullPolicy: Always
          image: "{{ .Values.wms.image.repository }}:{{ .Values.wms.image.tag }}"
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "wms"
            - name: SERVICE_GROUP
              value: "carrier"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: CARRIER_BROKER_URL
              value: "http://{{ .Release.Name }}-broker:3000"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.wms.resources.limits.cpu }}
              memory: {{ .Values.wms.resources.limits.memory }}
            requests:
              cpu: {{ .Values.wms.resources.requests.cpu }}
              memory: {{ .Values.wms.resources.requests.memory }}
---
#Internal Carrier Deployments
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-internal-dhl
  labels:
    app.kubernetes.io/component: internal-dhl
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.carriers.internal.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: internal-dhl
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: internal-dhl
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: internal-dhl
          imagePullPolicy: Always
          image: "{{ .Values.carriers.internal.image.repository }}:{{ .Values.carriers.internal.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "carrier-internal-dhl"
            - name: CARRIER_CODE
              value: "DHL"
            - name: SERVICE_GROUP
              value: "carrier"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: CARRIER_BROKER_URL
              value: "http://{{ .Release.Name }}-broker:3000"
            - name: REDIS_URL
              value: "redis://carrier-redis-master:6379"
            - name: CARRIER_EXTERNAL_URL
              value: "http://{{ .Release.Name }}-external-dhl:3000"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.carriers.resources.limits.cpu }}
              memory: {{ .Values.carriers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.carriers.resources.requests.cpu }}
              memory: {{ .Values.carriers.resources.requests.memory }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-internal-ups
  labels:
    app.kubernetes.io/component: internal-ups
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.carriers.internal.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: internal-ups
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: internal-ups
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: internal-ups
          imagePullPolicy: Always
          image: "{{ .Values.carriers.internal.image.repository }}:{{ .Values.carriers.internal.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "carrier-internal-ups"
            - name: CARRIER_CODE
              value: "UPS"
            - name: SERVICE_GROUP
              value: "carrier"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: CARRIER_BROKER_URL
              value: "http://{{ .Release.Name }}-broker:3000"
            - name: REDIS_URL
              value: "redis://carrier-redis-master:6379"
            - name: CARRIER_EXTERNAL_URL
              value: "http://{{ .Release.Name }}-external-ups:3000"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.carriers.resources.limits.cpu }}
              memory: {{ .Values.carriers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.carriers.resources.requests.cpu }}
              memory: {{ .Values.carriers.resources.requests.memory }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-internal-fedex
  labels:
    app.kubernetes.io/component: internal-fedex
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.carriers.internal.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: internal-fedex
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: internal-fedex
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: internal-fedex
          imagePullPolicy: Always
          image: "{{ .Values.carriers.internal.image.repository }}:{{ .Values.carriers.internal.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "carrier-internal-fedex"
            - name: CARRIER_CODE
              value: "FedEx"
            - name: SERVICE_GROUP
              value: "carrier"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: CARRIER_BROKER_URL
              value: "http://{{ .Release.Name }}-broker:3000"
            - name: REDIS_URL
              value: "redis://carrier-redis-master:6379"
            - name: CARRIER_EXTERNAL_URL
              value: "http://{{ .Release.Name }}-external-fedex:3000"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.carriers.resources.limits.cpu }}
              memory: {{ .Values.carriers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.carriers.resources.requests.cpu }}
              memory: {{ .Values.carriers.resources.requests.memory }}
---
#External Carrier Deployments
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-external-dhl
  labels:
    app.kubernetes.io/component: external-dhl
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.carriers.external.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: external-dhl
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: external-dhl
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: external-dhl
          imagePullPolicy: Always
          image: "{{ .Values.carriers.external.image.repository }}:{{ .Values.carriers.external.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "carrier-external-dhl"
            - name: CARRIER_CODE
              value: "DHL"
            - name: SERVICE_GROUP
              value: "carrier-external"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.carriers.resources.limits.cpu }}
              memory: {{ .Values.carriers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.carriers.resources.requests.cpu }}
              memory: {{ .Values.carriers.resources.requests.memory }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-external-ups
  labels:
    app.kubernetes.io/component: external-ups
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.carriers.external.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: external-ups
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: external-ups
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: external-ups
          imagePullPolicy: Always
          image: "{{ .Values.carriers.external.image.repository }}:{{ .Values.carriers.external.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "carrier-external-ups"
            - name: CARRIER_CODE
              value: "UPS"
            - name: SERVICE_GROUP
              value: "carrier-external"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.carriers.resources.limits.cpu }}
              memory: {{ .Values.carriers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.carriers.resources.requests.cpu }}
              memory: {{ .Values.carriers.resources.requests.memory }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-external-fedex
  labels:
    app.kubernetes.io/component: external-fedex
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.carriers.external.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: external-fedex
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: external-fedex
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      containers:
        - name: external-fedex
          imagePullPolicy: Always
          image: "{{ .Values.carriers.external.image.repository }}:{{ .Values.carriers.external.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: SERVICE_NAME
              value: "carrier-external-fedex"
            - name: CARRIER_CODE
              value: "FedEx"
            - name: SERVICE_GROUP
              value: "carrier-external"
            - name: OTEL_COLLECTOR_URL
              value: "http://otel-opentelemetry-collector:4318"
            - name: FLAGD_HOST
              value: "flagd-carrier"
          resources:
            limits:
              cpu: {{ .Values.carriers.resources.limits.cpu }}
              memory: {{ .Values.carriers.resources.limits.memory }}
            requests:
              cpu: {{ .Values.carriers.resources.requests.cpu }}
              memory: {{ .Values.carriers.resources.requests.memory }}